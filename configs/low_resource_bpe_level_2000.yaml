name: "low_resource_bpe_level_2000"

data:
    src: "de"
    trg: "en"
    train: "proc_data/tokenized.train.de-en"
    dev:   "proc_data/tokenized.dev.de-en"
    test:  "proc_data/tokenized.test.de-en"
    level: "bpe"
    lowercase: False
    max_sent_length: 100
    # either use a vocabulary limit:
    #src_voc_limit: ?
    #trg_voc_limit: ?
    # or (= not both!) a file with a vocabulary built before starting the training:
    src_vocab: "vocab/build_vocab_2000.de-en"
    trg_vocab: "vocab/build_vocab_2000.de-en"

testing:
    beam_size: 3
    alpha: 1.0

training:
    optimizer: "adam"
    normalization: "tokens"
    learning_rate: 0.0003
    batch_size: 2048
    batch_type: "token"
    eval_batch_size: 1024
    eval_batch_type: "token"
    scheduling: "plateau"
    patience: 8
    weight_decay: 0.0
    decrease_factor: 0.7
    early_stopping_metric: "ppl"
    epochs: 2
    validation_freq: 500
    logging_freq: 100
    eval_metric: "bleu"
    model_dir: "models/low_resource_bpe_level_2000.de-en"
    overwrite: False
    shuffle: True
    use_cuda: False
    max_output_length: 100
    print_valid_sents: [0, 1, 2, 3, 4]
    label_smoothing: 0.1

model:
    tied_embeddings: False
    tied_softmax: False
    encoder:
        rnn_type: "gru"
        embeddings:
            embedding_dim: 512
            scale: False
        hidden_size: 1024
        bidirectional: True
        dropout: 0.0
        num_layers: 1
    decoder:
        rnn_type: "gru"
        embeddings:
            embedding_dim: 512
            scale: False
        emb_scale: False
        hidden_size: 1024
        dropout: 0.0
        hidden_dropout: 0.0
        num_layers: 1
        input_feeding: True
        init_hidden: "bridge"
        attention: "bahdanau"
